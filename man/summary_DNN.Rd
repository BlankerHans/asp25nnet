% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summary_DNN.R
\name{summary_DNN}
\alias{summary_DNN}
\title{Summary of a Trained Neural Network Model}
\usage{
summary_DNN(
  object,
  data,
  target_col,
  show_plot = TRUE,
  yscale = c("auto", "log", "robust"),
  cap_quantile = 0.99,
  drop_first = 0
)
}
\arguments{
\item{object}{Trained neural network model object containing parameters,
optimizer, learning rate, epochs, losses, and optional normalization info.}

\item{data}{Data frame used for model evaluation, including predictors and target.}

\item{target_col}{Character string with the name of the target variable.}

\item{show_plot}{Logical; if TRUE, plots of losses and predictions are shown. Default is TRUE.}

\item{yscale}{Character; determines y-axis scaling for loss plots:
\code{"auto"} (linear), \code{"log"} (logarithmic), \code{"robust"} (capped at quantile).}

\item{cap_quantile}{Numeric (0â€“1); quantile for robust loss capping. Default is 0.99.}

\item{drop_first}{Integer; number of initial epochs to exclude from loss plots. Default is 0.}
}
\value{
Invisibly returns the input \code{object} after printing and optionally plotting
summaries, losses, and model predictions.
}
\description{
Provides a summary of a trained neural network, including its
architecture, training setup, losses, and visualizations of model fit.
Depending on the number of input features, it generates either 2D or 3D plots.
}
\examples{
\dontrun{
# Assuming `nn_model` is a trained neural network object
summary_DNN(
  object = nn_model,
  data = mydata,
  target_col = "y",
  show_plot = TRUE,
  yscale = "auto"
)
}

}
